//
// This is a file generated by EMB wizard.
// Please do not edit this file!
// Generated time: 06/13/2022 19:30:55
// Version: Fuxi fx2020a win64
// Wizard name: EMB 1.0b
//
// ============================================================
// File Name: DESC2_RAM.v
// IP core : emb
// Device name: P1P060N0V324C7
// ============================================================

module DESC2_RAM (clk, ce, we, rstn, a, d, q);
input clk;
input ce;
input we;
input rstn;
input [7:0]a;
input [1023:0]d;
output [1023:0]q;

wire vcc_net;
wire gnd_net;
wire net_44;
wire net_189;
wire net_334;
wire net_479;
wire net_624;
wire net_769;
wire net_914;
wire net_1059;
wire net_1204;
wire net_1349;
wire net_1494;
wire net_1639;
wire net_1784;
wire net_1929;

assign vcc_net = 1;
assign gnd_net = 0;
EMB5K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.init_file (""),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.width_a (18),
		.width_b (18),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_0(
		.doa({q[15], q[14], q[13], q[12], q[11], q[10], q[9], q[8], q[7], q[6], q[5], q[4], q[3], q[2], q[1], q[0]}),
		.dob(),
		.dopa(),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[15], d[14], d[13], d[12], d[11], d[10], d[9], d[8], d[7], d[6], d[5], d[4], d[3], d[2], d[1], d[0]}),
		.dib(),
		.dipa(),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea(we),
		.web()
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_1(
		.doa({q[86], q[85], q[84], q[83], q[82], q[81], q[80], q[79], q[77], q[76], q[75], q[74], q[73], q[72], q[71], q[70], q[68], q[67], q[66], q[65], q[64], q[63], q[62], q[61], q[59], q[58], q[57], q[56], q[55], q[54], q[53], q[52], q[50], q[49], q[48], q[47], q[46], q[45], q[44], q[43], q[41], q[40], q[39], q[38], q[37], q[36], q[35], q[34], q[32], q[31], q[30], q[29], q[28], q[27], q[26], q[25], q[23], q[22], q[21], q[20], q[19], q[18], q[17], q[16]}),
		.dob(),
		.dopa({q[87], q[78], q[69], q[60], q[51], q[42], q[33], q[24]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[86], d[85], d[84], d[83], d[82], d[81], d[80], d[79], d[77], d[76], d[75], d[74], d[73], d[72], d[71], d[70], d[68], d[67], d[66], d[65], d[64], d[63], d[62], d[61], d[59], d[58], d[57], d[56], d[55], d[54], d[53], d[52], d[50], d[49], d[48], d[47], d[46], d[45], d[44], d[43], d[41], d[40], d[39], d[38], d[37], d[36], d[35], d[34], d[32], d[31], d[30], d[29], d[28], d[27], d[26], d[25], d[23], d[22], d[21], d[20], d[19], d[18], d[17], d[16]}),
		.dib(),
		.dipa({d[87], d[78], d[69], d[60], d[51], d[42], d[33], d[24]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_5(
		.doa({q[158], q[157], q[156], q[155], q[154], q[153], q[152], q[151], q[149], q[148], q[147], q[146], q[145], q[144], q[143], q[142], q[140], q[139], q[138], q[137], q[136], q[135], q[134], q[133], q[131], q[130], q[129], q[128], q[127], q[126], q[125], q[124], q[122], q[121], q[120], q[119], q[118], q[117], q[116], q[115], q[113], q[112], q[111], q[110], q[109], q[108], q[107], q[106], q[104], q[103], q[102], q[101], q[100], q[99], q[98], q[97], q[95], q[94], q[93], q[92], q[91], q[90], q[89], q[88]}),
		.dob(),
		.dopa({q[159], q[150], q[141], q[132], q[123], q[114], q[105], q[96]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[158], d[157], d[156], d[155], d[154], d[153], d[152], d[151], d[149], d[148], d[147], d[146], d[145], d[144], d[143], d[142], d[140], d[139], d[138], d[137], d[136], d[135], d[134], d[133], d[131], d[130], d[129], d[128], d[127], d[126], d[125], d[124], d[122], d[121], d[120], d[119], d[118], d[117], d[116], d[115], d[113], d[112], d[111], d[110], d[109], d[108], d[107], d[106], d[104], d[103], d[102], d[101], d[100], d[99], d[98], d[97], d[95], d[94], d[93], d[92], d[91], d[90], d[89], d[88]}),
		.dib(),
		.dipa({d[159], d[150], d[141], d[132], d[123], d[114], d[105], d[96]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_9(
		.doa({q[230], q[229], q[228], q[227], q[226], q[225], q[224], q[223], q[221], q[220], q[219], q[218], q[217], q[216], q[215], q[214], q[212], q[211], q[210], q[209], q[208], q[207], q[206], q[205], q[203], q[202], q[201], q[200], q[199], q[198], q[197], q[196], q[194], q[193], q[192], q[191], q[190], q[189], q[188], q[187], q[185], q[184], q[183], q[182], q[181], q[180], q[179], q[178], q[176], q[175], q[174], q[173], q[172], q[171], q[170], q[169], q[167], q[166], q[165], q[164], q[163], q[162], q[161], q[160]}),
		.dob(),
		.dopa({q[231], q[222], q[213], q[204], q[195], q[186], q[177], q[168]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[230], d[229], d[228], d[227], d[226], d[225], d[224], d[223], d[221], d[220], d[219], d[218], d[217], d[216], d[215], d[214], d[212], d[211], d[210], d[209], d[208], d[207], d[206], d[205], d[203], d[202], d[201], d[200], d[199], d[198], d[197], d[196], d[194], d[193], d[192], d[191], d[190], d[189], d[188], d[187], d[185], d[184], d[183], d[182], d[181], d[180], d[179], d[178], d[176], d[175], d[174], d[173], d[172], d[171], d[170], d[169], d[167], d[166], d[165], d[164], d[163], d[162], d[161], d[160]}),
		.dib(),
		.dipa({d[231], d[222], d[213], d[204], d[195], d[186], d[177], d[168]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_13(
		.doa({q[302], q[301], q[300], q[299], q[298], q[297], q[296], q[295], q[293], q[292], q[291], q[290], q[289], q[288], q[287], q[286], q[284], q[283], q[282], q[281], q[280], q[279], q[278], q[277], q[275], q[274], q[273], q[272], q[271], q[270], q[269], q[268], q[266], q[265], q[264], q[263], q[262], q[261], q[260], q[259], q[257], q[256], q[255], q[254], q[253], q[252], q[251], q[250], q[248], q[247], q[246], q[245], q[244], q[243], q[242], q[241], q[239], q[238], q[237], q[236], q[235], q[234], q[233], q[232]}),
		.dob(),
		.dopa({q[303], q[294], q[285], q[276], q[267], q[258], q[249], q[240]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[302], d[301], d[300], d[299], d[298], d[297], d[296], d[295], d[293], d[292], d[291], d[290], d[289], d[288], d[287], d[286], d[284], d[283], d[282], d[281], d[280], d[279], d[278], d[277], d[275], d[274], d[273], d[272], d[271], d[270], d[269], d[268], d[266], d[265], d[264], d[263], d[262], d[261], d[260], d[259], d[257], d[256], d[255], d[254], d[253], d[252], d[251], d[250], d[248], d[247], d[246], d[245], d[244], d[243], d[242], d[241], d[239], d[238], d[237], d[236], d[235], d[234], d[233], d[232]}),
		.dib(),
		.dipa({d[303], d[294], d[285], d[276], d[267], d[258], d[249], d[240]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_17(
		.doa({q[374], q[373], q[372], q[371], q[370], q[369], q[368], q[367], q[365], q[364], q[363], q[362], q[361], q[360], q[359], q[358], q[356], q[355], q[354], q[353], q[352], q[351], q[350], q[349], q[347], q[346], q[345], q[344], q[343], q[342], q[341], q[340], q[338], q[337], q[336], q[335], q[334], q[333], q[332], q[331], q[329], q[328], q[327], q[326], q[325], q[324], q[323], q[322], q[320], q[319], q[318], q[317], q[316], q[315], q[314], q[313], q[311], q[310], q[309], q[308], q[307], q[306], q[305], q[304]}),
		.dob(),
		.dopa({q[375], q[366], q[357], q[348], q[339], q[330], q[321], q[312]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[374], d[373], d[372], d[371], d[370], d[369], d[368], d[367], d[365], d[364], d[363], d[362], d[361], d[360], d[359], d[358], d[356], d[355], d[354], d[353], d[352], d[351], d[350], d[349], d[347], d[346], d[345], d[344], d[343], d[342], d[341], d[340], d[338], d[337], d[336], d[335], d[334], d[333], d[332], d[331], d[329], d[328], d[327], d[326], d[325], d[324], d[323], d[322], d[320], d[319], d[318], d[317], d[316], d[315], d[314], d[313], d[311], d[310], d[309], d[308], d[307], d[306], d[305], d[304]}),
		.dib(),
		.dipa({d[375], d[366], d[357], d[348], d[339], d[330], d[321], d[312]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_21(
		.doa({q[446], q[445], q[444], q[443], q[442], q[441], q[440], q[439], q[437], q[436], q[435], q[434], q[433], q[432], q[431], q[430], q[428], q[427], q[426], q[425], q[424], q[423], q[422], q[421], q[419], q[418], q[417], q[416], q[415], q[414], q[413], q[412], q[410], q[409], q[408], q[407], q[406], q[405], q[404], q[403], q[401], q[400], q[399], q[398], q[397], q[396], q[395], q[394], q[392], q[391], q[390], q[389], q[388], q[387], q[386], q[385], q[383], q[382], q[381], q[380], q[379], q[378], q[377], q[376]}),
		.dob(),
		.dopa({q[447], q[438], q[429], q[420], q[411], q[402], q[393], q[384]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[446], d[445], d[444], d[443], d[442], d[441], d[440], d[439], d[437], d[436], d[435], d[434], d[433], d[432], d[431], d[430], d[428], d[427], d[426], d[425], d[424], d[423], d[422], d[421], d[419], d[418], d[417], d[416], d[415], d[414], d[413], d[412], d[410], d[409], d[408], d[407], d[406], d[405], d[404], d[403], d[401], d[400], d[399], d[398], d[397], d[396], d[395], d[394], d[392], d[391], d[390], d[389], d[388], d[387], d[386], d[385], d[383], d[382], d[381], d[380], d[379], d[378], d[377], d[376]}),
		.dib(),
		.dipa({d[447], d[438], d[429], d[420], d[411], d[402], d[393], d[384]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_25(
		.doa({q[518], q[517], q[516], q[515], q[514], q[513], q[512], q[511], q[509], q[508], q[507], q[506], q[505], q[504], q[503], q[502], q[500], q[499], q[498], q[497], q[496], q[495], q[494], q[493], q[491], q[490], q[489], q[488], q[487], q[486], q[485], q[484], q[482], q[481], q[480], q[479], q[478], q[477], q[476], q[475], q[473], q[472], q[471], q[470], q[469], q[468], q[467], q[466], q[464], q[463], q[462], q[461], q[460], q[459], q[458], q[457], q[455], q[454], q[453], q[452], q[451], q[450], q[449], q[448]}),
		.dob(),
		.dopa({q[519], q[510], q[501], q[492], q[483], q[474], q[465], q[456]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[518], d[517], d[516], d[515], d[514], d[513], d[512], d[511], d[509], d[508], d[507], d[506], d[505], d[504], d[503], d[502], d[500], d[499], d[498], d[497], d[496], d[495], d[494], d[493], d[491], d[490], d[489], d[488], d[487], d[486], d[485], d[484], d[482], d[481], d[480], d[479], d[478], d[477], d[476], d[475], d[473], d[472], d[471], d[470], d[469], d[468], d[467], d[466], d[464], d[463], d[462], d[461], d[460], d[459], d[458], d[457], d[455], d[454], d[453], d[452], d[451], d[450], d[449], d[448]}),
		.dib(),
		.dipa({d[519], d[510], d[501], d[492], d[483], d[474], d[465], d[456]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_29(
		.doa({q[590], q[589], q[588], q[587], q[586], q[585], q[584], q[583], q[581], q[580], q[579], q[578], q[577], q[576], q[575], q[574], q[572], q[571], q[570], q[569], q[568], q[567], q[566], q[565], q[563], q[562], q[561], q[560], q[559], q[558], q[557], q[556], q[554], q[553], q[552], q[551], q[550], q[549], q[548], q[547], q[545], q[544], q[543], q[542], q[541], q[540], q[539], q[538], q[536], q[535], q[534], q[533], q[532], q[531], q[530], q[529], q[527], q[526], q[525], q[524], q[523], q[522], q[521], q[520]}),
		.dob(),
		.dopa({q[591], q[582], q[573], q[564], q[555], q[546], q[537], q[528]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[590], d[589], d[588], d[587], d[586], d[585], d[584], d[583], d[581], d[580], d[579], d[578], d[577], d[576], d[575], d[574], d[572], d[571], d[570], d[569], d[568], d[567], d[566], d[565], d[563], d[562], d[561], d[560], d[559], d[558], d[557], d[556], d[554], d[553], d[552], d[551], d[550], d[549], d[548], d[547], d[545], d[544], d[543], d[542], d[541], d[540], d[539], d[538], d[536], d[535], d[534], d[533], d[532], d[531], d[530], d[529], d[527], d[526], d[525], d[524], d[523], d[522], d[521], d[520]}),
		.dib(),
		.dipa({d[591], d[582], d[573], d[564], d[555], d[546], d[537], d[528]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_33(
		.doa({q[662], q[661], q[660], q[659], q[658], q[657], q[656], q[655], q[653], q[652], q[651], q[650], q[649], q[648], q[647], q[646], q[644], q[643], q[642], q[641], q[640], q[639], q[638], q[637], q[635], q[634], q[633], q[632], q[631], q[630], q[629], q[628], q[626], q[625], q[624], q[623], q[622], q[621], q[620], q[619], q[617], q[616], q[615], q[614], q[613], q[612], q[611], q[610], q[608], q[607], q[606], q[605], q[604], q[603], q[602], q[601], q[599], q[598], q[597], q[596], q[595], q[594], q[593], q[592]}),
		.dob(),
		.dopa({q[663], q[654], q[645], q[636], q[627], q[618], q[609], q[600]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[662], d[661], d[660], d[659], d[658], d[657], d[656], d[655], d[653], d[652], d[651], d[650], d[649], d[648], d[647], d[646], d[644], d[643], d[642], d[641], d[640], d[639], d[638], d[637], d[635], d[634], d[633], d[632], d[631], d[630], d[629], d[628], d[626], d[625], d[624], d[623], d[622], d[621], d[620], d[619], d[617], d[616], d[615], d[614], d[613], d[612], d[611], d[610], d[608], d[607], d[606], d[605], d[604], d[603], d[602], d[601], d[599], d[598], d[597], d[596], d[595], d[594], d[593], d[592]}),
		.dib(),
		.dipa({d[663], d[654], d[645], d[636], d[627], d[618], d[609], d[600]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_37(
		.doa({q[734], q[733], q[732], q[731], q[730], q[729], q[728], q[727], q[725], q[724], q[723], q[722], q[721], q[720], q[719], q[718], q[716], q[715], q[714], q[713], q[712], q[711], q[710], q[709], q[707], q[706], q[705], q[704], q[703], q[702], q[701], q[700], q[698], q[697], q[696], q[695], q[694], q[693], q[692], q[691], q[689], q[688], q[687], q[686], q[685], q[684], q[683], q[682], q[680], q[679], q[678], q[677], q[676], q[675], q[674], q[673], q[671], q[670], q[669], q[668], q[667], q[666], q[665], q[664]}),
		.dob(),
		.dopa({q[735], q[726], q[717], q[708], q[699], q[690], q[681], q[672]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[734], d[733], d[732], d[731], d[730], d[729], d[728], d[727], d[725], d[724], d[723], d[722], d[721], d[720], d[719], d[718], d[716], d[715], d[714], d[713], d[712], d[711], d[710], d[709], d[707], d[706], d[705], d[704], d[703], d[702], d[701], d[700], d[698], d[697], d[696], d[695], d[694], d[693], d[692], d[691], d[689], d[688], d[687], d[686], d[685], d[684], d[683], d[682], d[680], d[679], d[678], d[677], d[676], d[675], d[674], d[673], d[671], d[670], d[669], d[668], d[667], d[666], d[665], d[664]}),
		.dib(),
		.dipa({d[735], d[726], d[717], d[708], d[699], d[690], d[681], d[672]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_41(
		.doa({q[806], q[805], q[804], q[803], q[802], q[801], q[800], q[799], q[797], q[796], q[795], q[794], q[793], q[792], q[791], q[790], q[788], q[787], q[786], q[785], q[784], q[783], q[782], q[781], q[779], q[778], q[777], q[776], q[775], q[774], q[773], q[772], q[770], q[769], q[768], q[767], q[766], q[765], q[764], q[763], q[761], q[760], q[759], q[758], q[757], q[756], q[755], q[754], q[752], q[751], q[750], q[749], q[748], q[747], q[746], q[745], q[743], q[742], q[741], q[740], q[739], q[738], q[737], q[736]}),
		.dob(),
		.dopa({q[807], q[798], q[789], q[780], q[771], q[762], q[753], q[744]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[806], d[805], d[804], d[803], d[802], d[801], d[800], d[799], d[797], d[796], d[795], d[794], d[793], d[792], d[791], d[790], d[788], d[787], d[786], d[785], d[784], d[783], d[782], d[781], d[779], d[778], d[777], d[776], d[775], d[774], d[773], d[772], d[770], d[769], d[768], d[767], d[766], d[765], d[764], d[763], d[761], d[760], d[759], d[758], d[757], d[756], d[755], d[754], d[752], d[751], d[750], d[749], d[748], d[747], d[746], d[745], d[743], d[742], d[741], d[740], d[739], d[738], d[737], d[736]}),
		.dib(),
		.dipa({d[807], d[798], d[789], d[780], d[771], d[762], d[753], d[744]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_45(
		.doa({q[878], q[877], q[876], q[875], q[874], q[873], q[872], q[871], q[869], q[868], q[867], q[866], q[865], q[864], q[863], q[862], q[860], q[859], q[858], q[857], q[856], q[855], q[854], q[853], q[851], q[850], q[849], q[848], q[847], q[846], q[845], q[844], q[842], q[841], q[840], q[839], q[838], q[837], q[836], q[835], q[833], q[832], q[831], q[830], q[829], q[828], q[827], q[826], q[824], q[823], q[822], q[821], q[820], q[819], q[818], q[817], q[815], q[814], q[813], q[812], q[811], q[810], q[809], q[808]}),
		.dob(),
		.dopa({q[879], q[870], q[861], q[852], q[843], q[834], q[825], q[816]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[878], d[877], d[876], d[875], d[874], d[873], d[872], d[871], d[869], d[868], d[867], d[866], d[865], d[864], d[863], d[862], d[860], d[859], d[858], d[857], d[856], d[855], d[854], d[853], d[851], d[850], d[849], d[848], d[847], d[846], d[845], d[844], d[842], d[841], d[840], d[839], d[838], d[837], d[836], d[835], d[833], d[832], d[831], d[830], d[829], d[828], d[827], d[826], d[824], d[823], d[822], d[821], d[820], d[819], d[818], d[817], d[815], d[814], d[813], d[812], d[811], d[810], d[809], d[808]}),
		.dib(),
		.dipa({d[879], d[870], d[861], d[852], d[843], d[834], d[825], d[816]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_49(
		.doa({q[950], q[949], q[948], q[947], q[946], q[945], q[944], q[943], q[941], q[940], q[939], q[938], q[937], q[936], q[935], q[934], q[932], q[931], q[930], q[929], q[928], q[927], q[926], q[925], q[923], q[922], q[921], q[920], q[919], q[918], q[917], q[916], q[914], q[913], q[912], q[911], q[910], q[909], q[908], q[907], q[905], q[904], q[903], q[902], q[901], q[900], q[899], q[898], q[896], q[895], q[894], q[893], q[892], q[891], q[890], q[889], q[887], q[886], q[885], q[884], q[883], q[882], q[881], q[880]}),
		.dob(),
		.dopa({q[951], q[942], q[933], q[924], q[915], q[906], q[897], q[888]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[950], d[949], d[948], d[947], d[946], d[945], d[944], d[943], d[941], d[940], d[939], d[938], d[937], d[936], d[935], d[934], d[932], d[931], d[930], d[929], d[928], d[927], d[926], d[925], d[923], d[922], d[921], d[920], d[919], d[918], d[917], d[916], d[914], d[913], d[912], d[911], d[910], d[909], d[908], d[907], d[905], d[904], d[903], d[902], d[901], d[900], d[899], d[898], d[896], d[895], d[894], d[893], d[892], d[891], d[890], d[889], d[887], d[886], d[885], d[884], d[883], d[882], d[881], d[880]}),
		.dib(),
		.dipa({d[951], d[942], d[933], d[924], d[915], d[906], d[897], d[888]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);EMB18K #(
		.clka_inv (1'b0),
		.clkb_inv (1'b0),
		.eccreaden (1'b0),
		.eccwriteen (1'b0),
		.emb5k_1_init_file (""),
		.emb5k_2_init_file (""),
		.emb5k_3_init_file (""),
		.emb5k_4_init_file (""),
		.extension_mode ("area"),
		.init_file ("none"),
		.outreg_a (1'b0),
		.outreg_b (1'b0),
		.rammode ("sp"),
		.use_parity (1'b1),
		.width_a (72),
		.width_b (72),
		.writemode_a ("write_first"),
		.writemode_b ("write_first")
	)
	emb_53(
		.doa({q[1022], q[1021], q[1020], q[1019], q[1018], q[1017], q[1016], q[1015], q[1013], q[1012], q[1011], q[1010], q[1009], q[1008], q[1007], q[1006], q[1004], q[1003], q[1002], q[1001], q[1000], q[999], q[998], q[997], q[995], q[994], q[993], q[992], q[991], q[990], q[989], q[988], q[986], q[985], q[984], q[983], q[982], q[981], q[980], q[979], q[977], q[976], q[975], q[974], q[973], q[972], q[971], q[970], q[968], q[967], q[966], q[965], q[964], q[963], q[962], q[961], q[959], q[958], q[957], q[956], q[955], q[954], q[953], q[952]}),
		.dob(),
		.dopa({q[1023], q[1014], q[1005], q[996], q[987], q[978], q[969], q[960]}),
		.dopb(),
		.addra({gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, gnd_net, a[7], a[6], a[5], a[4], a[3], a[2], a[1], a[0]}),
		.addrb(),
		.clka(clk),
		.clkb(),
		.dia({d[1022], d[1021], d[1020], d[1019], d[1018], d[1017], d[1016], d[1015], d[1013], d[1012], d[1011], d[1010], d[1009], d[1008], d[1007], d[1006], d[1004], d[1003], d[1002], d[1001], d[1000], d[999], d[998], d[997], d[995], d[994], d[993], d[992], d[991], d[990], d[989], d[988], d[986], d[985], d[984], d[983], d[982], d[981], d[980], d[979], d[977], d[976], d[975], d[974], d[973], d[972], d[971], d[970], d[968], d[967], d[966], d[965], d[964], d[963], d[962], d[961], d[959], d[958], d[957], d[956], d[955], d[954], d[953], d[952]}),
		.dib(),
		.dipa({d[1023], d[1014], d[1005], d[996], d[987], d[978], d[969], d[960]}),
		.dipb(),
		.cea(ce),
		.ceb(gnd_net),
		.regcea(vcc_net),
		.regceb(),
		.regsra(rstn),
		.regsrb(),
		.wea({we, we, we, we}),
		.web(),
		.eccoutdberr(),
		.eccoutsberr(),
		.eccreadaddr(),
		.eccindberr(gnd_net),
		.eccinsberr(gnd_net)
	);
endmodule


// ============================================================
//                  emb Setting
//
// Warning: This part is read by Fuxi, please don't modify it.
// ============================================================
// Device          : P1P060N0V324C7
// Module          : DESC2_RAM
// IP core         : emb
// IP Version      : 1

// AddrUsedA       : 8
// ByteWriteEn     : false
// DataUsedA       : 1024
// DataUsedB       : 1024
// EmbResource     : AUTO
// EmbType         : sp
// ErrorInjectMode : None
// InitFile        : 
// RegoutA         : false
// RegoutB         : false
// RegoutEnA       : false
// RegoutEnB       : false
// Simulation Files: 
// SplitEmb        : false
// SplitInfo       : 1024,256;block_0:16,256,0,0,0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15;block_1:18,256,0,0,16 17 18 19 20 21 22 23 25 26 27 28 29 30 31 32 24 33;block_2:18,256,0,0,34 35 36 37 38 39 40 41 43 44 45 46 47 48 49 50 42 51;block_3:18,256,0,0,52 53 54 55 56 57 58 59 61 62 63 64 65 66 67 68 60 69;block_4:18,256,0,0,70 71 72 73 74 75 76 77 79 80 81 82 83 84 85 86 78 87;block_5:18,256,0,0,88 89 90 91 92 93 94 95 97 98 99 100 101 102 103 104 96 105;block_6:18,256,0,0,106 107 108 109 110 111 112 113 115 116 117 118 119 120 121 122 114 123;block_7:18,256,0,0,124 125 126 127 128 129 130 131 133 134 135 136 137 138 139 140 132 141;block_8:18,256,0,0,142 143 144 145 146 147 148 149 151 152 153 154 155 156 157 158 150 159;block_9:18,256,0,0,160 161 162 163 164 165 166 167 169 170 171 172 173 174 175 176 168 177;block_10:18,256,0,0,178 179 180 181 182 183 184 185 187 188 189 190 191 192 193 194 186 195;block_11:18,256,0,0,196 197 198 199 200 201 202 203 205 206 207 208 209 210 211 212 204 213;block_12:18,256,0,0,214 215 216 217 218 219 220 221 223 224 225 226 227 228 229 230 222 231;block_13:18,256,0,0,232 233 234 235 236 237 238 239 241 242 243 244 245 246 247 248 240 249;block_14:18,256,0,0,250 251 252 253 254 255 256 257 259 260 261 262 263 264 265 266 258 267;block_15:18,256,0,0,268 269 270 271 272 273 274 275 277 278 279 280 281 282 283 284 276 285;block_16:18,256,0,0,286 287 288 289 290 291 292 293 295 296 297 298 299 300 301 302 294 303;block_17:18,256,0,0,304 305 306 307 308 309 310 311 313 314 315 316 317 318 319 320 312 321;block_18:18,256,0,0,322 323 324 325 326 327 328 329 331 332 333 334 335 336 337 338 330 339;block_19:18,256,0,0,340 341 342 343 344 345 346 347 349 350 351 352 353 354 355 356 348 357;block_20:18,256,0,0,358 359 360 361 362 363 364 365 367 368 369 370 371 372 373 374 366 375;block_21:18,256,0,0,376 377 378 379 380 381 382 383 385 386 387 388 389 390 391 392 384 393;block_22:18,256,0,0,394 395 396 397 398 399 400 401 403 404 405 406 407 408 409 410 402 411;block_23:18,256,0,0,412 413 414 415 416 417 418 419 421 422 423 424 425 426 427 428 420 429;block_24:18,256,0,0,430 431 432 433 434 435 436 437 439 440 441 442 443 444 445 446 438 447;block_25:18,256,0,0,448 449 450 451 452 453 454 455 457 458 459 460 461 462 463 464 456 465;block_26:18,256,0,0,466 467 468 469 470 471 472 473 475 476 477 478 479 480 481 482 474 483;block_27:18,256,0,0,484 485 486 487 488 489 490 491 493 494 495 496 497 498 499 500 492 501;block_28:18,256,0,0,502 503 504 505 506 507 508 509 511 512 513 514 515 516 517 518 510 519;block_29:18,256,0,0,520 521 522 523 524 525 526 527 529 530 531 532 533 534 535 536 528 537;block_30:18,256,0,0,538 539 540 541 542 543 544 545 547 548 549 550 551 552 553 554 546 555;block_31:18,256,0,0,556 557 558 559 560 561 562 563 565 566 567 568 569 570 571 572 564 573;block_32:18,256,0,0,574 575 576 577 578 579 580 581 583 584 585 586 587 588 589 590 582 591;block_33:18,256,0,0,592 593 594 595 596 597 598 599 601 602 603 604 605 606 607 608 600 609;block_34:18,256,0,0,610 611 612 613 614 615 616 617 619 620 621 622 623 624 625 626 618 627;block_35:18,256,0,0,628 629 630 631 632 633 634 635 637 638 639 640 641 642 643 644 636 645;block_36:18,256,0,0,646 647 648 649 650 651 652 653 655 656 657 658 659 660 661 662 654 663;block_37:18,256,0,0,664 665 666 667 668 669 670 671 673 674 675 676 677 678 679 680 672 681;block_38:18,256,0,0,682 683 684 685 686 687 688 689 691 692 693 694 695 696 697 698 690 699;block_39:18,256,0,0,700 701 702 703 704 705 706 707 709 710 711 712 713 714 715 716 708 717;block_40:18,256,0,0,718 719 720 721 722 723 724 725 727 728 729 730 731 732 733 734 726 735;block_41:18,256,0,0,736 737 738 739 740 741 742 743 745 746 747 748 749 750 751 752 744 753;block_42:18,256,0,0,754 755 756 757 758 759 760 761 763 764 765 766 767 768 769 770 762 771;block_43:18,256,0,0,772 773 774 775 776 777 778 779 781 782 783 784 785 786 787 788 780 789;block_44:18,256,0,0,790 791 792 793 794 795 796 797 799 800 801 802 803 804 805 806 798 807;block_45:18,256,0,0,808 809 810 811 812 813 814 815 817 818 819 820 821 822 823 824 816 825;block_46:18,256,0,0,826 827 828 829 830 831 832 833 835 836 837 838 839 840 841 842 834 843;block_47:18,256,0,0,844 845 846 847 848 849 850 851 853 854 855 856 857 858 859 860 852 861;block_48:18,256,0,0,862 863 864 865 866 867 868 869 871 872 873 874 875 876 877 878 870 879;block_49:18,256,0,0,880 881 882 883 884 885 886 887 889 890 891 892 893 894 895 896 888 897;block_50:18,256,0,0,898 899 900 901 902 903 904 905 907 908 909 910 911 912 913 914 906 915;block_51:18,256,0,0,916 917 918 919 920 921 922 923 925 926 927 928 929 930 931 932 924 933;block_52:18,256,0,0,934 935 936 937 938 939 940 941 943 944 945 946 947 948 949 950 942 951;block_53:18,256,0,0,952 953 954 955 956 957 958 959 961 962 963 964 965 966 967 968 960 969;block_54:18,256,0,0,970 971 972 973 974 975 976 977 979 980 981 982 983 984 985 986 978 987;block_55:18,256,0,0,988 989 990 991 992 993 994 995 997 998 999 1000 1001 1002 1003 1004 996 1005;block_56:18,256,0,0,1006 1007 1008 1009 1010 1011 1012 1013 1015 1016 1017 1018 1019 1020 1021 1022 1014 1023
// Synthesis Files : 
// UseEccEn        : false
// WriteModeA      : Write First
// WriteModeB      : Write First
